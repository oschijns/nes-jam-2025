/*
 * Copyright (c) 2023, Patrick Bene
 * This file is distributed under the Boost Software License, Version 1.0.
 * See LICENSE_1_0.txt or https://www.boost.org/LICENSE_1_0.txt 
 */

// This example shows how to load a MapFab file containing 3 levels.
// When running the example, hit any key to change the current level.

// Load the .mapfab file, calling the macros for each definition.
mapfab(map_data, "assets/maps.mapfab", "chr", "palette", "metatiles", "level")

vars /metatiles
    CC/metatiles mt_nw
    CC/metatiles mt_ne
    CC/metatiles mt_sw
    CC/metatiles mt_se
    CC/metatiles mt_ca

// Sets the 'mt_' pointers to offsets of 'mt'.
fn load_metatiles(CC/metatiles mt)
    UU size = UU(read U(mt))
    if size == 0
        size = 256
    mt_nw = mt
    mt += size
    mt_ne = mt
    mt += size
    mt_sw = mt
    mt += size
    mt_se = mt
    mt += size
    mt_ca = mt

fn load_level(CCC/levels level)
    // CHR:
    U chr_bank = read U(level)
    state(chr_bank)

    // Palette:
    load_palette(read CCC/palettes(level))
    ppu_upload_palette()

    // Metatiles:
    load_metatiles(read CC/metatiles(level))

    // Level tiles:
    ppu_reset_addr($2000)
    CCC/levels tiles = level
    for U y = 0; y < 15; y += 1
        for U x = 0; x < 16; x += 1
            U tile = tiles[x]
            {PPUDATA}(mt_nw[tile])
            {PPUDATA}(mt_ne[tile])
        for U x = 0; x < 16; x += 1
            U tile = tiles[x]
            {PPUDATA}(mt_sw[tile])
            {PPUDATA}(mt_se[tile])
        tiles += 16

    // Level attributes:
    tiles = level
    for U y = 0; y < 15; y += 2
        for U x = 0; x < 16; x += 2
            U attr = mt_ca[tiles[x + 17]]
            attr <<= 2
            attr |= mt_ca[tiles[x + 16]] & %11
            attr <<= 2
            attr |= mt_ca[tiles[x + 1]] & %11
            attr <<= 2
            attr |= mt_ca[tiles[x + 0]] & %11
            {PPUDATA}(attr)
        tiles += 32


ct CCC/levels[] levels = CCC/levels[](
    @lev_l1,
    @lev_l2,
    @lev_l3)


mode main_level()
    {PPUMASK}(0)
    load_level(levels[level_index])
    {PPUMASK}(PPUMASK_ON) // Turn on rendering afterwards