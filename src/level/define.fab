/*
 * Copyright (c) 2023, Patrick Bene
 * This file is distributed under the Boost Software License, Version 1.0.
 * See LICENSE_1_0.txt or https://www.boost.org/LICENSE_1_0.txt 
 */

// This example shows how to load a MapFab file containing 3 levels.
// When running the example, hit any key to change the current level.


// Define the tileset (commonly called CHR):
chrrom
    file(fmt, "../../assets/tiles.png")


// Load the .mapfab file, calling the macros for each definition.
mapfab(mmt_32, "../../assets/chunks.mapfab", "", "palette", "mmtiles", "chunk")


/// Write a meta-meta-tile to a specific location
fn load_mmt(U nt_marker, U x, U y, U mmt_index)

    // compute the address where to write the tiles
    UU nt_addr = UU(UF(nt_marker)) + (UU(y) << 7) + UU(x)
    load_mmt_tiles(nt_addr, mmt_index)

    // compute the address where to write the attributes
    nt_addr = UU(UF(nt_marker)) + $3C0 + (UU(y) << 3) + UU(x)
    ppu_reset_addr(nt_addr)
    {PPUDATA}(mmtiles_attr[mmt_index])


/// Write a row of a sequence of meta-meta-tiles
fn load_mmt_tiles(UU nt_addr, U mmt_index)
: +inline

    ppu_reset_addr(nt_addr)
    {PPUDATA}(mmtiles_def_00[mmt_index])
    {PPUDATA}(mmtiles_def_01[mmt_index])
    {PPUDATA}(mmtiles_def_02[mmt_index])
    {PPUDATA}(mmtiles_def_03[mmt_index])

    nt_addr += 32 // next row
    ppu_reset_addr(nt_addr)
    {PPUDATA}(mmtiles_def_10[mmt_index])
    {PPUDATA}(mmtiles_def_11[mmt_index])
    {PPUDATA}(mmtiles_def_12[mmt_index])
    {PPUDATA}(mmtiles_def_13[mmt_index])

    nt_addr += 32 // next row
    ppu_reset_addr(nt_addr)
    {PPUDATA}(mmtiles_def_20[mmt_index])
    {PPUDATA}(mmtiles_def_21[mmt_index])
    {PPUDATA}(mmtiles_def_22[mmt_index])
    {PPUDATA}(mmtiles_def_23[mmt_index])

    nt_addr += 32 // next row
    ppu_reset_addr(nt_addr)
    {PPUDATA}(mmtiles_def_30[mmt_index])
    {PPUDATA}(mmtiles_def_31[mmt_index])
    {PPUDATA}(mmtiles_def_32[mmt_index])
    {PPUDATA}(mmtiles_def_33[mmt_index])



ct CCC/chunks[] chunks = CCC/chunks[](
    @chunk_earth,
    @chunk_stone,
    @chunk_leaves
)

/*
mode main_level()
    {PPUMASK}(0)
    load_level(levels[level_index])
    {PPUMASK}(PPUMASK_ON) // Turn on rendering afterwards

*/